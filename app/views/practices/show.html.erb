
<div class="practice"></div>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Question of the day </title>
  </head>
  <br>
    <h4>Lets practice!</h4>
  <br>



<div>
  <%= @practice.questions.order(created_at: :desc).last(1)  %>
</div>

<div>
  render "questions/show"
</div>


<div class="flex-container5">
  <%= link_to "next", interview_practice_question_path(@interview, @practice, @question_id="16"), class: "btn btn-primary btn-lg " %>
</div>



  <div class="flex-container4">
      <div class="flex-item">
        <% @practice.questions.sample(1).each do |question| %>
        <div class="practice-card">
          <p><%= question.text %></p>

        <div>

          <body>
              <%question = question.text %>
            <main>
              <form class="input" id="voice-form">
                <div class="field">
                  <label for="speech"></label>
                  <input type="text" value="<%=question %>" name="speech" id="speech" required />
                </div>
                <div class="field">
                  <input type="text"name="voices" id="voices">
                    <option value=""></option>
                </div>
                <button>Say it!</button>
               </div>
             </div>
             </form>
            </main>
            <footer>

            </footer>
            <script>
              window.addEventListener('DOMContentLoaded', () => {
              const form = document.getElementById('voice-form');
              const input = document.getElementById('speech');
              const voiceSelect = document.getElementById('voices');
              let voices;
              let currentVoice;


              const populateVoices = () => {
              const availableVoices = speechSynthesis.getVoices();

              availableVoices.forEach(voice => {
                const option = document.createElement('option');
                let optionText = `${voice.name} (${voice.lang})`;
                if (voice.default) {
                  optionText += ' [default]';
                  if (typeof currentVoice === 'undefined') {
                    currentVoice = voice;
                    option.selected = true;
                  }
                }
                if (currentVoice === voice) {
                  option.selected = true;
                }
                option.textContent = optionText;
                voiceSelect.appendChild(option);
              });
              voices = availableVoices;
              };          voiceSelect.innerHTML = '';


             populateVoices();
             speechSynthesis.onvoiceschanged = populateVoices;

             voiceSelect.addEventListener('change', event => {
                const selectedIndex = event.target.selectedIndex;
                currentVoice = voices[selectedIndex];
              });

             form.addEventListener('submit', event => {
              event.preventDefault();
              const toSay = input.value.trim();
              const utterance = new SpeechSynthesisUtterance(toSay);
              utterance.voice = voices[50]
              speechSynthesis.speak(utterance);
              input.value = '';
              });
            });
          </script>
        </body>
        </html>
        </div>
      <% end %>
      <div class ="flex-item">
      <video autoplay></video>
        <script>
          const constraints = {
          video: true,
          };
          const video = document.querySelector("video");
          navigator.mediaDevices.getUserMedia(constraints).then((stream) => {
          video.srcObject = stream;
          });
        </script>
      </div>

    </div>


<div class="flex-container5">
  <%= link_to "next", interview_practice_path(@interview, @practice), class: "btn btn-primary btn-lg " %>
</div>
