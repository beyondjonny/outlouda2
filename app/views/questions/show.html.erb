


<div class="practice"></div>
<!DOCTYPE html>
<html lang="en">
    <style>
      button {
        display: inline-block;
        background-color: #167FFB;
        border-radius: 10px;
        color: #eeeeee;
        text-align: center;
        font-size: 28px;
        padding: 5px;
        width: 500px;
        -webkit-transition: all 0.5s;
        -moz-transition: all 0.5s;
        -o-transition: all 0.5s;
        transition: all 0.5s;
        cursor: pointer;
      }
    </style>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Question of the day </title>
  </head>
  <br>
    <h4>Lets practice!</h4>
  <br>

  <script>
  function myFunction() {
    var x = document.getElementById("mirror");
    if (x.style.display === "none") {
      x.style.display = "block";
    } else {
      x.style.display = "none";
    }
  }
  </script>

  <div class="flex-container4">
    <div class ="flex-item">
      <button onclick="myFunction()">Mirror on/off</button>
      <div id="mirror">
        <video autoplay></video>
          <script>
            const constraints = {
            video: true,
            };
            const video = document.querySelector("video");
            navigator.mediaDevices.getUserMedia(constraints).then((stream) => {
            video.srcObject = stream;
            });
          </script>
      </div>
        <% @question.text %>
          <p><% @question.text %></p>
        <div>
          <body>
              <%question = @question.text %>
            <main>
              <form class="input" id="voice-form">
                <div class="field">
                  <button> Listen</button>
                  <label for="speech"></label>
                  <input type="hidden" value="<%=question %>" name="speech" id="speech" required />
                </div>
                <div class="field">
                  <input type="hidden"name="voices" id="voices">
                    <option value=""></option>
                </div>
               </form>
              </main>
              <footer>

              </footer>

              <button onclick="showDiv()">Read</button>

            <script>
              function showDiv() {
              document.getElementById('question').style.display = "block";
            }
            </script>


            <script>
              window.addEventListener('DOMContentLoaded', () => {
              const form = document.getElementById('voice-form');
              const input = document.getElementById('speech');
              const voiceSelect = document.getElementById('voices');
              let voices;
              let currentVoice;


              const populateVoices = () => {
              const availableVoices = speechSynthesis.getVoices();

              availableVoices.forEach(voice => {
                const option = document.createElement('option');
                let optionText = `${voice.name} (${voice.lang})`;
                if (voice.default) {
                  optionText += ' [default]';
                  if (typeof currentVoice === 'undefined') {
                    currentVoice = voice;
                    option.selected = true;
                  }
                }
                if (currentVoice === voice) {
                  option.selected = true;
                }
                option.textContent = optionText;
                voiceSelect.appendChild(option);
              });
              voices = availableVoices;
              };          voiceSelect.innerHTML = '';


             populateVoices();
             speechSynthesis.onvoiceschanged = populateVoices;

             voiceSelect.addEventListener('change', event => {
                const selectedIndex = event.target.selectedIndex;
                currentVoice = voices[selectedIndex];
              });

             form.addEventListener('submit', event => {
              event.preventDefault();
              const toSay = input.value.trim();
              const utterance = new SpeechSynthesisUtterance(toSay);
              utterance.voice = voices[50]
              speechSynthesis.speak(utterance);
              input.value = '';
              });
            });
          </script>
        </body>
        </html>
        </div>
      </div>
      <br>

        <script>
          function showDiv() {
            var x = document.getElementById("question");
            if (x.style.display === "none") {
              x.style.display = "block";
            } else {
              x.style.display = "none";
            }
          }
          </script>


      <div class="flex-item">
        <div id= "question" style="display:none">
          <div class="question-card">
            <p><%= @question.text %></p>
          </div>
        </div>
      </div>
    </div>

<span>
  <%= link_to "Quit Practice", interview_practices_path(@interview, @practice), class: "btn btn-primary btn-lg " %>
</span>

<span>
  <%= link_to "Questions", interview_practice_questions_path(@interview, @practice), class: "btn btn-primary btn-lg " %>
</span>



<!-- link_to "Previous", interview_practice_question_path(@interview, @practice, @question.previous), class: "btn btn-primary btn-lg"
link_to "next", interview_practice_question_path(@interview, @practice, @question.next), class: "btn btn-primary btn-lg"
 -->
